plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    
    // [Optional] Forgix
    // id "io.github.pacifistmc.forgix" version "1.2.9"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        setEnableTransitiveAccessWideners true
        setEnableModProvidedJavadoc true
    }

    repositories {
        maven {
            url = "https://maven.architectury.dev/"
        }
        maven {
            url = "https://maven.shedaniel.me/"
        }
        maven {
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url = "https://maven.ladysnake.org/releases/"
        }
        maven {
            url = "https://maven.terraformersmc.com/releases/"
        }
        maven {
            url = "https://jitpack.io/"
            content {
                includeGroupAndSubgroups "com.github"
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"

        // [Optional] Other dependencies
         implementation "com.google.code.findbugs:jsr305:${rootProject.jsr305_version}"
         annotationProcessor(compileOnly("org.projectlombok:lombok:${rootProject.lombok_version}"))
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name + "-" + project.name
    }

    version = rootProject.minecraft_version + "-" + rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
        options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    }

    compileJava.dependsOn clean

    java {
        withSourcesJar()
    }

    publishing {
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            mavenLocal()
        }
    }
}

// [Optional] Forgix
// forgix {
//     group = rootProject.maven_group
//     mergedJarName = rootProject.archives_base_name + "-" + rootProject.minecraft_version + "-" + rootProject.mod_version + ".jar" // (Required Value)
//     outputDir = "build/libs/merged"

//     forge {
//         projectName = "forge"
//         jarLocation = "build/libs/" + rootProject.archives_base_name + "-forge-" + rootProject.minecraft_version + "-" + rootProject.mod_version + ".jar"

//         mixin "${rootProject.mod_id}.mixins.json"
//     }

//     fabric {
//         projectName = "fabric"
//         jarLocation = "build/libs/" + rootProject.archives_base_name + "-fabric-" + rootProject.minecraft_version + "-" + rootProject.mod_version + ".jar"
//     }
// }
